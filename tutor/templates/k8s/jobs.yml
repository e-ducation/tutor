{% macro include_script(script) %}{% include "scripts/" + script %}{% endmacro %}---
apiVersion: batch/v1
kind: Job
metadata:
  name: mysql-client/init
  labels:
    app.kubernetes.io/component: script
    app.kubernetes.io/name: mysql-client/init
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mysql-client/init
    spec:
      restartPolicy: Never
      containers:
      - name: mysql-client
        image: {{ DOCKER_REGISTRY }}{{ DOCKER_IMAGE_MYSQL }}
        command:  ["/bin/sh", "-e", "-c"]
        args: 
          - |
            {{ include_script("mysql-client/createdatabases")|indent(12) }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: cms/init
  labels:
    app.kubernetes.io/component: script
    app.kubernetes.io/name: cms/init
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cms/init
    spec:
      restartPolicy: Never
      containers:
      - name: cms
        image: {{ DOCKER_REGISTRY }}{{ DOCKER_IMAGE_OPENEDX }}
        command:  ["/bin/sh", "-e", "-c"]
        args: 
          - |
            {{ include_script("cms/init")|indent(12) }}
        volumeMounts:
          - mountPath: /openedx/edx-platform/lms/envs/tutor/
            name: settings-lms
          - mountPath: /openedx/edx-platform/cms/envs/tutor/
            name: settings-cms
          - mountPath: /openedx/config
            name: config
      volumes:
      - name: settings-lms
        configMap:
          name: openedx-settings-lms
      - name: settings-cms
        configMap:
          name: openedx-settings-cms
      - name: config
        configMap:
          name: openedx-config
---
apiVersion: batch/v1
kind: Job
metadata:
  name: lms/init
  labels:
    app.kubernetes.io/component: script
    app.kubernetes.io/name: lms/init
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: lms/init
    spec:
      restartPolicy: Never
      containers:
      - name: lms
        image: {{ DOCKER_REGISTRY }}{{ DOCKER_IMAGE_OPENEDX }}
        command:  ["/bin/sh", "-e", "-c"]
        args: 
          - |
            {{ include_script("lms/init")|indent(12) }}
        volumeMounts:
          - mountPath: /openedx/edx-platform/lms/envs/tutor/
            name: settings-lms
          - mountPath: /openedx/edx-platform/cms/envs/tutor/
            name: settings-cms
          - mountPath: /openedx/config
            name: config
      volumes:
      - name: settings-lms
        configMap:
          name: openedx-settings-lms
      - name: settings-cms
        configMap:
          name: openedx-settings-cms
      - name: config
        configMap:
          name: openedx-config
---
apiVersion: batch/v1
kind: Job
metadata:
  name: cms/importdemocourse
  labels:
    app.kubernetes.io/component: script
    app.kubernetes.io/name: cms/importdemocourse
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cms/importdemocourse
    spec:
      restartPolicy: Never
      containers:
      - name: lms
        image: {{ DOCKER_REGISTRY }}{{ DOCKER_IMAGE_OPENEDX }}
        command:  ["/bin/sh", "-e", "-c"]
        args: 
          - |
            {{ include_script("cms/importdemocourse")|indent(12) }}
        volumeMounts:
          - mountPath: /openedx/edx-platform/lms/envs/tutor/
            name: settings-lms
          - mountPath: /openedx/edx-platform/cms/envs/tutor/
            name: settings-cms
          - mountPath: /openedx/config
            name: config
          - mountPath: /openedx/data
            name: data
      volumes:
      - name: settings-lms
        configMap:
          name: openedx-settings-lms
      - name: settings-cms
        configMap:
          name: openedx-settings-cms
      - name: config
        configMap:
          name: openedx-config
      - name: data
        persistentVolumeClaim:
          claimName: lms-data
{% if ACTIVATE_FORUM %}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: forum/init
  labels:
    app.kubernetes.io/component: script
    app.kubernetes.io/name: forum/init
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: forum/init
    spec:
      restartPolicy: Never
      containers:
      - name: forum
        image: {{ DOCKER_REGISTRY }}{{ DOCKER_IMAGE_FORUM }}
        command:  ["/bin/sh", "-e", "-c"]
        args: 
          - |
            {{ include_script("forum/init")|indent(12) }}
        env:
          - name: SEARCH_SERVER
            value: "http://{{ ELASTICSEARCH_HOST }}:{{ ELASTICSEARCH_PORT }}"
          - name: MONGOHQ_URL
            value: "mongodb://{% if MONGODB_USERNAME and MONGODB_PASSWORD %}{{ MONGODB_USERNAME}}:{{ MONGODB_PASSWORD }}@{% endif %}{{ MONGODB_HOST }}:{{ MONGODB_PORT }}/cs_comments_service"
{% endif %}
{% if ACTIVATE_NOTES %}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: notes/init
  labels:
    app.kubernetes.io/component: script
    app.kubernetes.io/name: notes/init
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: notes/init
    spec:
      restartPolicy: Never
      containers:
      - name: notes
        image: {{ DOCKER_REGISTRY }}{{ DOCKER_IMAGE_NOTES }}
        command:  ["/bin/sh", "-e", "-c"]
        args: 
          - |
            {{ include_script("notes/init")|indent(12) }}
        volumeMounts:
          - mountPath: /openedx/edx-notes-api/notesserver/settings/tutor.py
            name: settings
      volumes:
        - name: settings
          configMap:
            name: notes-settings
{% endif %}
{% if ACTIVATE_XQUEUE %}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: xqueue/init
  labels:
    app.kubernetes.io/component: script
    app.kubernetes.io/name: xqueue/init
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: xqueue/init
    spec:
      restartPolicy: Never
      containers:
      - name: xqueue
        image: {{ DOCKER_REGISTRY }}{{ DOCKER_IMAGE_NOTES }}
        command:  ["/bin/sh", "-e", "-c"]
        args: 
          - |
            {{ include_script("xqueue/init")|indent(12) }}
        volumeMounts:
          - mountPath: /openedx/xqueue/xqueue/tutor.py
            name: settings
      volumes:
        - name: settings
          configMap:
            name: notes-settings
{% endif %}

{{ patch("k8s-jobs") }}